name: Run GUT Tests

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]
    workflow_dispatch:

env:
    GODOT_VERSION: "4.4.1"
    TEST_DIR: "res://test"

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  lfs: true

            - name: Setup Godot
              uses: lihop/setup-godot@v2
              with:
                  version: ${{ env.GODOT_VERSION }}

            - name: Verify GUT installation
              run: |
                  if [ ! -d "addons/gut" ]; then
                    echo "Error: GUT addon not found in addons/gut directory"
                    exit 1
                  fi

            - name: Import project
              run: |
                  # Import the project to generate .godot folder and import all assets
                  timeout 300 godot --headless --import --quit || true

            - name: Run GUT tests
              run: |
                  # Create output directory for test results
                  mkdir -p test_output

                  # Run GUT tests with various output options
                  godot --headless --script addons/gut/gut_cmdln.gd \
                    -gdir=${{ env.TEST_DIR }} \
                    -ginclude_subdirs \
                    -gexit \
                    -glog=2 \
                    -gjunit_xml_file=test_output/junit_results.xml \
                    -gxml_file=test_output/gut_results.xml

            - name: Parse test results
              if: always()
              run: |
                  # Check if test results exist and display summary
                  if [ -f "test_output/junit_results.xml" ]; then
                    echo "Test results found:"
                    grep -o 'tests="[0-9]*"' test_output/junit_results.xml || echo "No test count found"
                    grep -o 'failures="[0-9]*"' test_output/junit_results.xml || echo "No failure count found"
                    grep -o 'errors="[0-9]*"' test_output/junit_results.xml || echo "No error count found"
                  else
                    echo "No test results file found"
                  fi

            - name: Upload test results
              if: always()
              uses: actions/upload-artifact@v3
              with:
                  name: test-results-${{ github.run_number }}
                  path: |
                      test_output/
                      .gutconfig.json
                  retention-days: 30

            - name: Publish test results
              if: always()
              uses: dorny/test-reporter@v1
              with:
                  name: GUT Test Results
                  path: test_output/junit_results.xml
                  reporter: java-junit
